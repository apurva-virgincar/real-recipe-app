{"version":3,"sources":["firebase.js","providers/userprovider.jsx","components/SignIn/index.js","components/SignUp/index.js","components/PassForget/index.js","components/Application/index.js","components/ShopList/index.js","components/Navbar/index.js","components/App/index.js","constants/routes.js","serviceWorker.js","index.js"],"names":["generateUserDocument","user","additionalData","a","userRef","firestore","doc","uid","get","exists","email","displayName","photoURL","set","console","error","getUserDocument","userDocument","data","firebase","auth","GoogleAuthProvider","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","UserContext","createContext","UserProvider","state","componentDidMount","onAuthStateChanged","userAuth","setState","Provider","value","this","props","children","Component","SignIn","useState","setEmail","password","setPassword","onChangeHandler","event","currentTarget","name","className","style","color","htmlFor","type","placeholder","id","onChange","onClick","preventDefault","signInWithEmailAndPasswordHandler","to","SignUp","createUserWithEmailAndPasswordHandler","createUserWithEmailAndPassword","setError","setDisplayName","PasswordReset","emailHasBeenSent","action","Application","path","ShopList","items","setItems","inputValue","setInputValue","totalItemCount","setTotalItemCount","calculateTotal","reduce","total","item","quantity","target","icon","faPlus","newItem","itemName","isSelected","newItems","handleAddButtonClick","map","index","toggleComplete","faCheckCircle","faCircle","faChevronLeft","handleQuantityDecrease","faChevronRight","handleQuantityIncrease","Styles","styled","div","NavigationBar","expand","Form","FormControl","Brand","href","Toggle","aria-controls","Collapse","Nav","Item","Link","App","component","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","self","addEventListener","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c27f14af.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBbIhD_wUTuY_CtmEBsHHnkd4P663D4gWU\",\r\n    authDomain: \"real-recipe-app.firebaseapp.com\",\r\n    databaseURL: \"https://real-recipe-app.firebaseio.com\",\r\n    projectId: \"real-recipe-app\",\r\n    storageBucket: \"real-recipe-app.appspot.com\",\r\n    messagingSenderId: \"1018180141038\",\r\n    appId: \"1:1018180141038:web:1339476a1c0a0ee64b98ff\",\r\n    measurementId: \"G-67NGWN1LEG\"\r\n  };\r\n\r\n  export const generateUserDocument = async (user, additionalData) => {\r\n    if (!user) return;\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    const snapshot = await userRef.get();\r\n    if (!snapshot.exists) {\r\n      const { email, displayName, photoURL } = user;\r\n      try {\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          photoURL,\r\n          ...additionalData\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error creating user document\", error);\r\n      }\r\n    }\r\n    return getUserDocument(user.uid);\r\n  };\r\n  const getUserDocument = async uid => {\r\n    if (!uid) return null;\r\n    try {\r\n      const userDocument = await firestore.doc(`users/${uid}`).get();\r\n      return {\r\n        uid,\r\n        ...userDocument.data()\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error fetching user\", error);\r\n    }\r\n  };\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  firebase.initializeApp(firebaseConfig);\r\n  export const auth=firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n  export const signInWithGoogle = () => {\r\n    auth.signInWithPopup(provider);\r\n  };","import React, { Component, createContext } from \"react\";\r\nimport { auth, generateUserDocument } from \"../firebase\";\r\n\r\n\r\nexport const UserContext = createContext({ user: null });\r\nclass UserProvider extends Component {\r\n  state = {\r\n    user: null\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    auth.onAuthStateChanged(async userAuth => {\r\n      const user = await generateUserDocument(userAuth);\r\n      this.setState({ user });\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <UserContext.Provider value={this.state.user}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    );\r\n  }\r\n}\r\nexport default UserProvider;\r\n","import React, {useState} from \"react\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nconst SignIn = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    // eslint-disable-next-line\r\n    const [error, setError] = useState(null);\r\n    const signInWithEmailAndPasswordHandler = \r\n            (event,email, password) => {\r\n                event.preventDefault();\r\n    };\r\n\r\n      const onChangeHandler = (event) => {\r\n          const {name, value} = event.currentTarget;\r\n\r\n          if(name === 'userEmail') {\r\n              setEmail(value);\r\n          }\r\n          else if(name === 'userPassword'){\r\n            setPassword(value);\r\n          }\r\n      };\r\n\r\n  return (\r\n    <div className=\"mt-8\" style={{ color:\"black\"}}>\r\n      <h1 /*className=\"text-center font-bold\"*/>Sign In</h1>\r\n      <div /*className=\"border border-blue-400 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\"*/>\r\n        {error !== null && <div /*className = \"py-4 bg-red-600 w-full text-white text-center mb-3\"*/>{error}</div>}\r\n        <form className=\"\">\r\n          <label htmlFor=\"userEmail\" className=\"block\">\r\n            Email:\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"my-1 p-1 w-full\"\r\n            name=\"userEmail\"\r\n            value = {email}\r\n            placeholder=\"E.g: apurva.virgincar@gmail.com\"\r\n            id=\"userEmail\"\r\n            onChange = {(event) => onChangeHandler(event)}\r\n          />\r\n          <label htmlFor=\"userPassword\" className=\"block\">\r\n            Password:\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"mt-1 mb-3 p-1 w-full\"\r\n            name=\"userPassword\"\r\n            value = {password}\r\n            placeholder=\"Your Password\"\r\n            id=\"userPassword\"\r\n            onChange = {(event) => onChangeHandler(event)}\r\n          />\r\n          <button /*className=\"bg-green-400 hover:bg-green-500 w-full py-2 text-white\"*/ onClick = {(event) => {signInWithEmailAndPasswordHandler(event, email, password)}}>\r\n            Sign in\r\n          </button>\r\n        </form>\r\n        <p /*className=\"text-center my-3\"*/>or</p>\r\n        <button\r\n          /*className=\"bg-red-500 hover:bg-red-600 w-full py-2 text-white\"*/>\r\n          Sign in with Google\r\n        </button>\r\n        <p className=\"text-center my-3\">\r\n          Don't have an account?{\" \"}\r\n          <Link to=\"signUp\" className=\"text-blue-500 hover:text-blue-600\">\r\n            Sign up here\r\n          </Link>{\" \"}\r\n          <br />{\" \"}\r\n          <Link to = \"passwordReset\" className=\"text-blue-100 hover:text-blue-600\">\r\n            Forgot Password?\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SignIn;","/* eslint-disable react/jsx-no-comment-textnodes */\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"@reach/router\";\r\nimport {auth} from \"../../firebase\";\r\nimport { generateUserDocument } from \"../../firebase\"\r\n//import './SignUp.css';\r\nconst SignUp = () => {\r\n  const createUserWithEmailAndPasswordHandler = async (event, email, password) => {\r\n    event.preventDefault();\r\n    try{\r\n      const {user} = await auth.createUserWithEmailAndPassword(email, password);\r\n      generateUserDocument(user, {displayName});\r\n    }\r\n    catch(error){\r\n      setError('Error Signing up with email and password');\r\n    }\r\n\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setDisplayName(\"\");\r\n  };\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  // eslint-disable-next-line\r\n  const [error, setError] = useState(null);\r\n  const onChangeHandler = event => {\r\n    const { name, value } = event.currentTarget;\r\n    if (name === \"userEmail\") {\r\n      setEmail(value);\r\n    } else if (name === \"userPassword\") {\r\n      setPassword(value);\r\n    } else if (name === \"displayName\") {\r\n      setDisplayName(value);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"mt-8\" style={{color:\"black\"}}>\r\n      <h1>Sign Up</h1>\r\n      <div //className=\"border border-blue-400 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\"\r\n      >\r\n        {error !== null && (\r\n          <div //className=\"py-4 bg-red-600 w-full text-black text-center mb-3\"\r\n          >\r\n            {error}\r\n          </div>\r\n        )}\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            //className=\"my-1 p-1 w-full \"\r\n            name=\"displayName\"\r\n            value={displayName}\r\n            placeholder=\"Full Name\"\r\n            //id=\"displayName\"\r\n            onChange={event => onChangeHandler(event)}\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            //className=\"my-1 p-1 w-full\"\r\n            name=\"userEmail\"\r\n            value={email}\r\n            placeholder=\"Email ID\"\r\n            //id=\"userEmail\"\r\n            onChange={event => onChangeHandler(event)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            //className=\"mt-1 mb-3 p-1 w-full\"\r\n            name=\"userPassword\"\r\n            value={password}\r\n            placeholder=\"Password\"\r\n            //id=\"userPassword\"\r\n            onChange={event => onChangeHandler(event)}\r\n          />\r\n          <button\r\n            //className=\"bg-green-400 hover:bg-green-500 w-full py-2 text-white\"\r\n            onClick={event => {\r\n              createUserWithEmailAndPasswordHandler(event, email, password);\r\n            }}\r\n          >\r\n            Sign up\r\n          </button>\r\n        </form>\r\n        <p className=\"text-center my-3\">or</p>\r\n        <button\r\n          className=\"bg-red-500 hover:bg-red-600 w-full py-2 text-white\"\r\n        >\r\n          Sign In with Google\r\n        </button>\r\n        <p className=\"text-center my-3\">\r\n          Already have an account?{\" \"}\r\n          <Link to=\"/\" className=\"text-blue-500 hover:text-blue-600\">\r\n            Sign in here\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SignUp;","import React, { useState } from \"react\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nconst PasswordReset = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  // eslint-disable-next-line\r\n  const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\r\n  // eslint-disable-next-line\r\n  const [error, setError] = useState(null);\r\n  const onChangeHandler = event => {\r\n    const { name, value } = event.currentTarget;\r\n    if (name === \"userEmail\") {\r\n      setEmail(value);\r\n    }\r\n  };\r\n  // eslint-disable-next-line\r\n  const sendResetEmail = event => {\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <div className=\"mt-8\">\r\n      <h1 className=\"text-xl text-center font-bold mb-3\">\r\n        Reset your Password\r\n      </h1>\r\n      <div className=\"border border-blue-300 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\r\n        <form action=\"\">\r\n          {emailHasBeenSent && (\r\n            <div className=\"py-3 bg-green-400 w-full text-white text-center mb-3\">\r\n              An email has been sent to you!\r\n            </div>\r\n          )}\r\n          {error !== null && (\r\n            <div className=\"py-3 bg-red-600 w-full text-white text-center mb-3\">\r\n              {error}\r\n            </div>\r\n          )}\r\n          <label htmlFor=\"userEmail\" className=\"w-full block\">\r\n            Email:\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"userEmail\"\r\n            id=\"userEmail\"\r\n            value={email}\r\n            placeholder=\"Input your email\"\r\n            onChange={onChangeHandler}\r\n            className=\"mb-3 w-full px-1 py-2\"\r\n          />\r\n          <button\r\n            className=\"w-full bg-blue-400 text-white py-3\"\r\n          >\r\n            Send me a reset link\r\n          </button>\r\n        </form>\r\n        <Link\r\n         to =\"/\"\r\n          className=\"my-2 text-blue-700 hover:text-blue-800 text-center block\"\r\n        >\r\n          &larr; back to sign in page\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PasswordReset;","/* eslint-disable react/jsx-no-comment-textnodes */\r\nimport React from 'react';\r\n//import { BrowserRouter as Router,Route } from 'react-router-dom';\r\nimport {Router} from \"@reach/router\";\r\nimport ProfilePage from \"../Profile\";\r\n\r\n//import Navigation from '../Navigation';\r\nimport SignIn from '../SignIn';\r\nimport SignUp from '../SignUp';\r\nimport PasswordReset from '../PassForget';\r\n//import ShopList from '../ShopList';\r\n\r\n//import * as ROUTES from '../../constants/routes';\r\n\r\nfunction Application() {\r\n  const user = null;\r\n  return (\r\n        user ?\r\n        <ProfilePage />\r\n      :\r\n        <Router>\r\n          <SignUp path=\"signUp\" />\r\n          <SignIn path=\"/\" />\r\n          <PasswordReset path = \"passwordReset\" />\r\n        </Router>\r\n\r\n  );\r\n}\r\n\r\n/*const App=()=>(\r\n    <Router>\r\n        <div>\r\n       <Navigation/>\r\n       \r\n        <hr/>\r\n        <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n      <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n      <Route path={ROUTES.SIGN_IN} component={SignInPage} />      \r\n      <Route path={ROUTES.HOME} component={HomePage} />\r\n      <Route path={ROUTES.ACCOUNT} component={AccountPage} />\r\n      <Route path={ROUTES.ADMIN} component={AdminPage} />\r\n      <Route path={ROUTES.Navbar} component={Navbar}/>\r\n      <Route path={ROUTES.ShopList} component={ShopList}/>\r\n\r\n    </div>\r\n    </Router>\r\n);*/\r\n\r\nexport default Application;","import React, { useState } from 'react';\r\nimport './index.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronRight, faChevronLeft, faCircle, faCheckCircle, faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ShopList = () => {\r\n\t// HINT: each \"item\" in our list names a name,\r\n\t// a boolean to tell if its been completed, and a quantity\r\n\tconst [items, setItems] = useState([\r\n\t]);\r\n\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\tconst [totalItemCount, setTotalItemCount] = useState(6);\r\n\r\n\tconst handleAddButtonClick = () => {\r\n\t\tconst newItem = {\r\n\t\t\titemName: inputValue,\r\n\t\t\tquantity: 1,\r\n\t\t\tisSelected: false,\r\n\t\t};\r\n\r\n\t\tconst newItems = [...items, newItem];\r\n\r\n\t\tsetItems(newItems);\r\n\t\tsetInputValue('');\r\n\t\tcalculateTotal();\r\n\t};\r\n\r\n\tconst handleQuantityIncrease = (index) => {\r\n\t\tconst newItems = [...items];\r\n\r\n\t\tnewItems[index].quantity++;\r\n\r\n\t\tsetItems(newItems);\r\n\t\tcalculateTotal();\r\n\t};\r\n\r\n\tconst handleQuantityDecrease = (index) => {\r\n\t\tconst newItems = [...items];\r\n\r\n\t\tnewItems[index].quantity--;\r\n\r\n\t\tsetItems(newItems);\r\n\t\tcalculateTotal();\r\n\t};\r\n\r\n\tconst toggleComplete = (index) => {\r\n\t\tconst newItems = [...items];\r\n\r\n\t\tnewItems[index].isSelected = !newItems[index].isSelected;\r\n\r\n\t\tsetItems(newItems);\r\n\t};\r\n\r\n\tconst calculateTotal = () => {\r\n\t\tconst totalItemCount = items.reduce((total, item) => {\r\n\t\t\treturn total + item.quantity;\r\n\t\t}, 0);\r\n\r\n\t\tsetTotalItemCount(totalItemCount);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='app-background'>\r\n\t\t\t<div className='main-container'>\r\n\t\t\t\t<div className='add-item-box'>\r\n\t\t\t\t\t<input value={inputValue} onChange={(event) => setInputValue(event.target.value)} className='add-item-input' placeholder='Add an item...' />\r\n\t\t\t\t\t<FontAwesomeIcon icon={faPlus} onClick={() => handleAddButtonClick()} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='item-list'>\r\n\t\t\t\t\t{items.map((item, index) => (\r\n\t\t\t\t\t\t<div className='item-container'>\r\n\t\t\t\t\t\t\t<div className='item-name' onClick={() => toggleComplete(index)}>\r\n\t\t\t\t\t\t\t\t{item.isSelected ? (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCheckCircle} />\r\n\t\t\t\t\t\t\t\t\t\t<span className='completed'>{item.itemName}</span>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCircle} />\r\n\t\t\t\t\t\t\t\t\t\t<span>{item.itemName}</span>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='quantity'>\r\n\t\t\t\t\t\t\t\t<button>\r\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faChevronLeft} onClick={() => handleQuantityDecrease(index)} />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<span> {item.quantity} </span>\r\n\t\t\t\t\t\t\t\t<button>\r\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faChevronRight} onClick={() => handleQuantityIncrease(index)} />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='total'>Total: {totalItemCount}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ShopList;\r\n","import React from 'react';\r\nimport { Nav, Navbar, Form, FormControl } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nconst Styles = styled.div`\r\n  .navbar { background-color: #222; }\r\n  a, .navbar-nav, .navbar-light .nav-link {\r\n    color: #9FFFCB;\r\n    &:hover { color: white; }\r\n  }\r\n  .navbar-brand {\r\n    font-size: 1.4em;\r\n    color: #9FFFCB;\r\n    &:hover { color: white; }\r\n  }\r\n  .form-center {\r\n    position: absolute !important;\r\n    left: 25%;\r\n    right: 25%;\r\n  }\r\n`;\r\nexport const NavigationBar = () => (\r\n  <Styles>\r\n    <Navbar expand=\"lg\">\r\n    <Form>\r\n        <FormControl type=\"text\" placeholder=\"Search\" className=\"\" />\r\n      </Form>\r\n      <Navbar.Brand href=\"/ShopList\">Shopping List</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n      \r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <Nav.Item><Nav.Link href=\"/SignUp\">Sign Up</Nav.Link></Nav.Item> \r\n          <Nav.Item><Nav.Link href=\"/\">Sign In</Nav.Link></Nav.Item>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  </Styles>\r\n)\r\n\r\nexport default NavigationBar;\r\n","/* eslint-disable react/jsx-no-comment-textnodes */\r\nimport React from 'react';\r\n//import 'bootstap/dist/css/bootstrap.min.css';\r\n//import Navigation from '../Navigation';\r\n\r\nimport Application from '../Application';\r\nimport ShopList from '../ShopList';\r\nimport SignUp from '../SignUp';\r\n//import Sidebar from '../Sidebar';\r\n\r\nimport * as ROUTES from '../../constants/routes';\r\nimport UserProvider from '../../providers/userprovider';\r\n//import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n// eslint-disable-next-line no-unused-vars\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { NavigationBar } from '../Navbar';\r\n\r\n/*function App() {\r\n  const user = null;\r\n  return (\r\n        user ?\r\n        <ProfilePage />\r\n      :\r\n        <Router>\r\n          <SignUp path=\"signUp\" />\r\n          <SignIn path=\"/\" />\r\n          <PasswordReset path = \"passwordReset\" />\r\n        </Router>\r\n\r\n  );\r\n}*/\r\n\r\nconst App=()=>(\r\n    <Router>\r\n      \r\n      <NavigationBar/>\r\n        <div>\r\n            <UserProvider><Application/></UserProvider>\r\n      \r\n      <Route path={ROUTES.ShopList} component={ShopList}/>\r\n      <Switch>\r\n  <Route exact path={ROUTES.SignUp} component={SignUp} />\r\n  \r\n</Switch>\r\n    </div>\r\n    </Router>\r\n);\r\n\r\nexport default App;","export const App = '/';\r\nexport const Navbar = '/navbar';\r\nexport const ShopList = '/ShopList';\r\nexport const SignUp = '/SignUp';\r\nexport const Home ='/';\r\n\r\n","/* eslint-disable no-restricted-globals */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\nself.addEventListener('fetch', function(event) {});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n  \n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}